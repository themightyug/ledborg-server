/* libledborg.h generated by valac 0.16.1, the Vala compiler, do not modify */


#ifndef __LIBLEDBORG_H__
#define __LIBLEDBORG_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define LED_BORG_TYPE_LED_BORG_CLIENT (led_borg_led_borg_client_get_type ())
#define LED_BORG_LED_BORG_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), LED_BORG_TYPE_LED_BORG_CLIENT, LedBorgLedBorgClient))
#define LED_BORG_LED_BORG_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), LED_BORG_TYPE_LED_BORG_CLIENT, LedBorgLedBorgClientClass))
#define LED_BORG_IS_LED_BORG_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), LED_BORG_TYPE_LED_BORG_CLIENT))
#define LED_BORG_IS_LED_BORG_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), LED_BORG_TYPE_LED_BORG_CLIENT))
#define LED_BORG_LED_BORG_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), LED_BORG_TYPE_LED_BORG_CLIENT, LedBorgLedBorgClientClass))

typedef struct _LedBorgLedBorgClient LedBorgLedBorgClient;
typedef struct _LedBorgLedBorgClientClass LedBorgLedBorgClientClass;
typedef struct _LedBorgLedBorgClientPrivate LedBorgLedBorgClientPrivate;

#define LED_BORG_TYPE_COLOUR (led_borg_colour_get_type ())
typedef struct _LedBorgColour LedBorgColour;

struct _LedBorgLedBorgClient {
	GObject parent_instance;
	LedBorgLedBorgClientPrivate * priv;
};

struct _LedBorgLedBorgClientClass {
	GObjectClass parent_class;
};

struct _LedBorgColour {
	gint red;
	gint green;
	gint blue;
};

typedef enum  {
	IO_ERROR_FILE_NOT_FOUND,
	IO_ERROR_COMMUNICATION_BREAKDOWN,
	IO_ERROR_GENERAL
} IOError;
#define IO_ERROR io_error_quark ()
typedef enum  {
	REQUEST_ERROR_COLOUR_REQUEST_INVALID,
	REQUEST_ERROR_GENERAL
} RequestError;
#define REQUEST_ERROR request_error_quark ()

GType led_borg_led_borg_client_get_type (void) G_GNUC_CONST;
LedBorgLedBorgClient* led_borg_led_borg_client_new (const gchar* host, guint port);
LedBorgLedBorgClient* led_borg_led_borg_client_construct (GType object_type, const gchar* host, guint port);
GType led_borg_colour_get_type (void) G_GNUC_CONST;
LedBorgColour* led_borg_colour_dup (const LedBorgColour* self);
void led_borg_colour_free (LedBorgColour* self);
GQuark io_error_quark (void);
void led_borg_led_borg_client_get_colour_from_server (LedBorgLedBorgClient* self, LedBorgColour* result, GError** error);
const gchar* led_borg_led_borg_client_get_server_host (LedBorgLedBorgClient* self);
void led_borg_led_borg_client_set_server_host (LedBorgLedBorgClient* self, const gchar* value);
guint led_borg_led_borg_client_get_server_port (LedBorgLedBorgClient* self);
void led_borg_led_borg_client_set_server_port (LedBorgLedBorgClient* self, guint value);
GQuark request_error_quark (void);
void led_borg_colour_init_with_rgb (LedBorgColour *self, const gchar* rgb);
gchar* led_borg_colour_to_string (LedBorgColour *self);
gchar* led_borg_colour_get_ledborg_value (LedBorgColour *self);
gchar* led_borg_colour_get_html_value (LedBorgColour *self);


G_END_DECLS

#endif
